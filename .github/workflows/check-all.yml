name: Checked C Clang and LLVM CI [TARGET check-all]

on:
  push:
    branches:
      - 'main'
    pull_request:
        branches:
            - 'main'
            - 'master'

env:
  builddir: "${{github.workspace}}/b/ninja"
  BUILDCONFIGURATION: "Release"
  BUILD_BINARIESDIRECTORY: "${{github.workspace}}/b"
  BUILD_SOURCESDIRECTORY: "${{github.workspace}}"
  TEST_TARGET_ARCH: "X86_64"
  RUN_LOCAL:  "no"
  TEST_SUITE: "CheckedC_clang"
jobs:
  # Cleanup files left behind by prior runs
  clean:
    name: Clean
    runs-on: ubuntu-latest
    steps:
      - name: Clean
        run: |
          rm -rf ${{env.builddir}}
          mkdir -p ${{env.builddir}}
          rm -rf ${{env.BUILD_BINARIESDIRECTORY}}
          mkdir -p ${{env.BUILD_BINARIESDIRECTORY}}
          rm -rf ${{env.BUILD_SOURCESDIRECTORY}}
          mkdir -p ${{env.BUILD_SOURCESDIRECTORY}}

  test_CheckedC_Clang_and_LLVM_UNIX:
    name: Build and test Checked C Clang and LLVM on UNIX
    needs: clean
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Checked C Clang code
        uses: actions/checkout@v2
        with:
          path: ${{env.BUILD_SOURCESDIRECTORY}}
      - name: Run setup-and-test.sh script
        run: |
         echo "export MY_ENV_VAR="CheckedC_LLVM"" >> $GITHUB_ENV
         cd ${{env.BUILD_SOURCESDIRECTORY}}/clang/automation/UNIX/
         ./build-and-test.sh

  test_CheckedC_Clang_and_LLVM_Windows:
    name: Build and test Checked C Clang and LLVM on windows
    needs: clean
    runs-on: windows-latest
    steps:
      - name: Checkout Checked C Clang code
        uses: actions/checkout@v2
        with:
          path: ${{env.BUILD_SOURCESDIRECTORY}}
      - name: Run setup-and-test.sh script
        run: |
          echo "export MY_ENV_VAR="CheckedC_LLVM"" >> $GITHUB_ENV
          chdir ${{env.BUILD_SOURCESDIRECTORY}}/clang/automation/UNIX/
          cmd.exe /c 'build-and-test.bat'
